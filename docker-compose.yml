version: '3.3'
services:

    arches:
      container_name: arches
      image: asisgtm/arches:721
      build:
        context: .
        dockerfile: ./Dockerfile
      command: run_arches
      volumes:
        - arches-log:/arches/arches/logs
        - arches-static:/static_root
        - ./danam:/web_root/danam
        #- ./docker/settings_local.py:/web_root/danam/settings_local.py
        #- ./archesssss:/web_root/arches/
        - ./docker:/web_root/docker
        - arches-uploadedfiles:/web_root/danam/danam/uploadedfiles
        - ./docker/entrypoint.sh:/web_root/entrypoint.sh
      env_file:
        - ./docker/env_file.env
      ports:
        - '127.0.0.1:8000:8000'
      depends_on:
        - db
        - elasticsearch
        - rabbitmq

    nginx:
      container_name: nginx
      image: asisgtm/nginx:2.0
      restart: unless-stopped
      ports:
        - '80:80'
        - '443:443'
      volumes:
        - arches-uploadedfiles:/www/media
        - arches-static:/www/static
        - letsencrypt-acme-challenge:/var/www
        - ./danam/danam/danam-cms:/www/danam-cms
        - letsencrypt:/etc/letsencrypt
        - ../install:/install
      env_file:
        - ./docker/env_file.env
      depends_on:
        - arches

    db:
      container_name: db
      image: kartoza/postgis:14-3.3
      volumes:
        - postgres-data:/var/lib/postgresql
        - postgres-log:/var/log/postgresql
        - ./docker/init-unix.sql:/docker-entrypoint-initdb.d/init.sql # to set up the DB template
      ports:
        - '127.0.0.1:5432:5432'
      env_file:
        - ./docker/env_file.env

    elasticsearch:
      container_name: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
      volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data
      ports:
        - "127.0.0.1:9200:9200"
        - "127.0.0.1:9300:9300"
      env_file:
        - ./docker/env_file.env

    rabbitmq:
      image: rabbitmq:3.11.5-management
      container_name: rabbitmq
      privileged: true
      volumes:
        - rabbitmq-data:/var/lib/rabbitmq/
        - rabbitmq-log:/var/log/rabbitmq/
        #  - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
        #  - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
        #  - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
      env_file:
        - ./docker/env_file.env
      ports:
        - "127.0.0.1:5672:5672"
        - "127.0.0.1:15672:15672"

    letsencrypt:
      container_name: letsencrypt
      image: asisgtm/letsencrypt:1.0
      volumes:
        - letsencrypt-acme-challenge:/var/www
        - letsencrypt:/etc/letsencrypt
        - letsencrypt-log:/var/log/letsencrypt
      command: get_certificate
      env_file:
        - ./docker/env_file.env

    geoserver:
      image: kartoza/geoserver:2.17.0
      container_name: geoserver
      volumes:
        - ../docker-geoserver/data_dir:/opt/geoserver/data_dir
      ports:
        - "127.0.0.1:8080:8080"
      restart: on-failure
      env_file:
        - ../docker-geoserver/docker-env/geoserver.env
      healthcheck:
        test: curl --fail -s http://localhost:8080/ || exit 1
        interval: 1m30s
        timeout: 10s
        retries: 3
    
volumes:
  arches-log:
    driver: local-persist
    driver_opts:
      mountpoint: /media/volumes/arches_arches-log
  arches-static:
    driver: local-persist
    driver_opts:
      mountpoint: /media/static
  arches-uploadedfiles: 
    driver: local-persist
    driver_opts:
      mountpoint: /srv/uploadedfiles
  postgres-data:
    driver: local-persist
    driver_opts:
      mountpoint: /media/volumes/arches_postgres-data
  postgres-log:
    driver: local-persist
    driver_opts:
      mountpoint: /media/volumes/arches_postgres-log
  elasticsearch-data:
    driver: local-persist
    driver_opts:
      mountpoint: /media/volumes/arches_elasticsearch-data
  rabbitmq-data:
    driver: local-persist
    driver_opts:
      mountpoint: /media/volumes/arches_rabbitmq-data
  rabbitmq-log:
    driver: local-persist
    driver_opts:
      mountpoint: /media/volumes/arches_rabbitmq-log
  letsencrypt:
    driver: local-persist
    driver_opts:
      mountpoint: /media/volumes/arches_letsencrypt
  letsencrypt-log:
  letsencrypt-acme-challenge:
    driver: local-persist
    driver_opts:
      mountpoint: /media/volumes/arches_letsencrypt_acme-challenge
